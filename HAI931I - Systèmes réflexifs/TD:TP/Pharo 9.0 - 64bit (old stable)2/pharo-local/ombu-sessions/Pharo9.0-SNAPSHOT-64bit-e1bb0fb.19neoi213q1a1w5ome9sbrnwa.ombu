OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2022-09-26T18:30:12.811432+02:00' ],		#prior : OmReference [ 'Pharo9.0-SNAPSHOT-64bit-e1bb0fb.47uv86ysy65ml8ef81v6f33lk', '8800' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #HAI914I,		#affectedPackageName : #HAI914I	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2022-09-26T18:30:12.815038+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpackage: \'HAI914I\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #HAI914I,			#package : #HAI914I,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:35:13.001772+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'as yet unclassified',			#sourceCode : 'push: anObject\r\t"met anObject dans contenu au bon index si la pile n\'est pas pleine"\r\r\tself isFull\r\t\tifFalse: [\r\t\t\tindex := index + 1.\r\t\t\tcontenu at: index put: anObject.]\r\t\tifTrue: [ self error: \'Impossible d\'\'empiler sur une pile pleine\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:35',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:35:13.025233+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'as yet unclassified',			#sourceCode : 'push: anObject\r\t"met anObject dans contenu au bon index si la pile n\'est pas pleine"\r\r\tself isFull\r\t\tifFalse: [\r\t\t\tindex := index + 1.\r\t\t\tcontenu at: index put: anObject.]\r\t\tifTrue: [ self error: \'Impossible d\'\'empiler sur une pile pleine\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:35',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: anObject\r\t"met anObject dans contenu au bon index si la pile n\'est pas pleine"\r\r\tself isFull\r\t\tifFalse: [\r\t\t\tindex := index + 1.\r\t\t\tcontenu at: index put: anObject.]\r\t\tifTrue: [ self error: \'Impossible d\'\'empiler sur une pile pleine\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:35',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:37:15.502066+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #adding,			#sourceCode : 'isEmpty\r\t^index = 0',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:37:49.577448+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #'as yet unclassified',			#sourceCode : 'isFull\r\t^index = capacite.',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:37:49.595511+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #'as yet unclassified',			#sourceCode : 'isFull\r\t^index = capacite.',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #testing,			#sourceCode : 'isFull\r\t^index = capacite.',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:38:04.27146+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #adding,			#sourceCode : 'isEmpty\r\t^index = 0',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^index = 0',			#stamp : 'RomeroGaetan 9/26/2022 18:37',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:38:28.69633+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #'as yet unclassified',			#sourceCode : 'pop\r\t"dépile et rend le sommet de pile si la pile n\'est pas vide"\r\t| retour |\r\tself isEmpty\r\t\tifFalse: [\r\t\t\tretour := contenu at: index.\r\t\t\tindex := index - 1.\r\t\t\t^retour]\r\t\tifTrue: [ self error: \'Pile vide, Impossible de dépiler\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:38',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:38:28.725066+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #'as yet unclassified',			#sourceCode : 'pop\r\t"dépile et rend le sommet de pile si la pile n\'est pas vide"\r\t| retour |\r\tself isEmpty\r\t\tifFalse: [\r\t\t\tretour := contenu at: index.\r\t\t\tindex := index - 1.\r\t\t\t^retour]\r\t\tifTrue: [ self error: \'Pile vide, Impossible de dépiler\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:38',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\t"dépile et rend le sommet de pile si la pile n\'est pas vide"\r\t| retour |\r\tself isEmpty\r\t\tifFalse: [\r\t\t\tretour := contenu at: index.\r\t\t\tindex := index - 1.\r\t\t\t^retour]\r\t\tifTrue: [ self error: \'Pile vide, Impossible de dépiler\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:38',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:39:21.529803+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #'as yet unclassified',			#sourceCode : 'top\r\t"rend le sommet de pile si la pile n\'est pas vide, sans dépiler"\r\r\tself isEmpty\r\t\tifFalse: [ ^contenu at: index]\r\t\tifTrue: [ self error: \'Rien au sommet d\'\'une pile vide\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:39',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:39:21.556002+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #'as yet unclassified',			#sourceCode : 'top\r\t"rend le sommet de pile si la pile n\'est pas vide, sans dépiler"\r\r\tself isEmpty\r\t\tifFalse: [ ^contenu at: index]\r\t\tifTrue: [ self error: \'Rien au sommet d\'\'une pile vide\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:39',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r\t"rend le sommet de pile si la pile n\'est pas vide, sans dépiler"\r\r\tself isEmpty\r\t\tifFalse: [ ^contenu at: index]\r\t\tifTrue: [ self error: \'Rien au sommet d\'\'une pile vide\' ]',			#stamp : 'RomeroGaetan 9/26/2022 18:39',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:41:26.68643+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r',			#stamp : 'RomeroGaetan 9/26/2022 18:41',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:41:26.705155+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r',			#stamp : 'RomeroGaetan 9/26/2022 18:41',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r',			#stamp : 'RomeroGaetan 9/26/2022 18:41',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:43:16.270682+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r',			#stamp : 'RomeroGaetan 9/26/2022 18:41',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r\t\r\tself assert: (self isEmpty).\r',			#stamp : 'RomeroGaetan 9/26/2022 18:43',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:44:05.364338+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'printOn: aStream\r\t"Cette méthode est appelée par la méthode printString qui fabrique une représentation du    receveur sous forme de chaîne.\r\t PrintString est elle-même appelée par les outils de l\'environnement, par exemple par la    méthode printIt du Playground."\r\t\r\taStream nextPutAll: \'une Pile, de taille: \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant: \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu do: [ :each | each printOn: aStream. aStream space ].\r\taStream nextPut: $).',			#stamp : 'RomeroGaetan 9/26/2022 18:44',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:44:05.375168+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'printOn: aStream\r\t"Cette méthode est appelée par la méthode printString qui fabrique une représentation du    receveur sous forme de chaîne.\r\t PrintString est elle-même appelée par les outils de l\'environnement, par exemple par la    méthode printIt du Playground."\r\t\r\taStream nextPutAll: \'une Pile, de taille: \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant: \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu do: [ :each | each printOn: aStream. aStream space ].\r\taStream nextPut: $).',			#stamp : 'RomeroGaetan 9/26/2022 18:44',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\t"Cette méthode est appelée par la méthode printString qui fabrique une représentation du    receveur sous forme de chaîne.\r\t PrintString est elle-même appelée par les outils de l\'environnement, par exemple par la    méthode printIt du Playground."\r\t\r\taStream nextPutAll: \'une Pile, de taille: \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant: \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu do: [ :each | each printOn: aStream. aStream space ].\r\taStream nextPut: $).',			#stamp : 'RomeroGaetan 9/26/2022 18:44',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:46:42.839429+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t0 to: nb do: [ :i |  self push: (oldc at: i)]',			#stamp : 'RomeroGaetan 9/26/2022 18:46',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:46:42.868393+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t0 to: nb do: [ :i |  self push: (oldc at: i)]',			#stamp : 'RomeroGaetan 9/26/2022 18:46',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t0 to: nb do: [ :i |  self push: (oldc at: i)]',			#stamp : 'RomeroGaetan 9/26/2022 18:46',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:52:56.956489+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'TestCase subclass: #TestPile\r\tinstanceVariableNames: \'standard pleine vide\'\r\tclassVariableNames: \'\'\r\tpackage: \'HAI914I\'',				#superclassName : 'TestCase',				#traitCompositionSource : '{}'			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #standard,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #pleine,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #vide,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #HAI914I,			#package : #HAI914I,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:15.802153+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #'as yet unclassified',			#sourceCode : 'setUp\r\t"une pile vide"\r\tvide := Pile new initialize: 3.\r\t\r\t"une pile dans un état quelconque, ni vide ni pleine"\r\tstandard := Pile new initialize: 4.\r\tstandard push: 1.\r\t\r\t"une pile pleine"\r\tpleine := Pile new initialize: 2.\r\tpleine push: 1.\r\tpleine push: 2.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:15.809886+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #'as yet unclassified',			#sourceCode : 'setUp\r\t"une pile vide"\r\tvide := Pile new initialize: 3.\r\t\r\t"une pile dans un état quelconque, ni vide ni pleine"\r\tstandard := Pile new initialize: 4.\r\tstandard push: 1.\r\t\r\t"une pile pleine"\r\tpleine := Pile new initialize: 2.\r\tpleine push: 1.\r\tpleine push: 2.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #initialization,			#sourceCode : 'setUp\r\t"une pile vide"\r\tvide := Pile new initialize: 3.\r\t\r\t"une pile dans un état quelconque, ni vide ni pleine"\r\tstandard := Pile new initialize: 4.\r\tstandard push: 1.\r\t\r\t"une pile pleine"\r\tpleine := Pile new initialize: 2.\r\tpleine push: 1.\r\tpleine push: 2.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:38.709542+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEqual,			#protocol : #'as yet unclassified',			#sourceCode : 'testEqual\r\t| copy |\r\tcopy := standard shallowCopy.\r\tself assert: standard equals: copy.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:38.720151+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEqual,			#protocol : #'as yet unclassified',			#sourceCode : 'testEqual\r\t| copy |\r\tcopy := standard shallowCopy.\r\tself assert: standard equals: copy.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEqual,			#protocol : #tests,			#sourceCode : 'testEqual\r\t| copy |\r\tcopy := standard shallowCopy.\r\tself assert: standard equals: copy.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:57.187939+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #'as yet unclassified',			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself testPush: vide.\r\tself testPush: standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:55:57.19821+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #'as yet unclassified',			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself testPush: vide.\r\tself testPush: standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself testPush: vide.\r\tself testPush: standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:57:21.849564+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself testPush: vide.\r\tself testPush: standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:55',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself vide.\r\tself standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:57',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:57:46.112246+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself vide.\r\tself standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:57',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tself should: [ pleine push: #anything ] raise: Error.\r\tself testPush: vide.\r\tself testPush: standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:57',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:58:04.331923+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testVide,			#protocol : #'as yet unclassified',			#sourceCode : 'testVide\r\tself assert: vide isEmpty',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:58:04.34099+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testVide,			#protocol : #'as yet unclassified',			#sourceCode : 'testVide\r\tself assert: vide isEmpty',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testVide,			#protocol : #tests,			#sourceCode : 'testVide\r\tself assert: vide isEmpty',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:58:57.905133+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPop:',			#protocol : #'as yet unclassified',			#sourceCode : 'testPop: unePile\r\t"attention à ce que standard reste standard, ni vide ni pleine, pour les autres méthodes de test"\r\t| p1 p2 |\r\tp1 := unePile top.\r\tp2 := unePile pop.\r\tself deny: unePile isFull.\r\tself assert: p2 equals: p1.\r\tunePile push: p1.\r\tself assert: unePile top equals: p2.',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:58:57.913949+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPop:',			#protocol : #'as yet unclassified',			#sourceCode : 'testPop: unePile\r\t"attention à ce que standard reste standard, ni vide ni pleine, pour les autres méthodes de test"\r\t| p1 p2 |\r\tp1 := unePile top.\r\tp2 := unePile pop.\r\tself deny: unePile isFull.\r\tself assert: p2 equals: p1.\r\tunePile push: p1.\r\tself assert: unePile top equals: p2.',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPop:',			#protocol : #tests,			#sourceCode : 'testPop: unePile\r\t"attention à ce que standard reste standard, ni vide ni pleine, pour les autres méthodes de test"\r\t| p1 p2 |\r\tp1 := unePile top.\r\tp2 := unePile pop.\r\tself deny: unePile isFull.\r\tself assert: p2 equals: p1.\r\tunePile push: p1.\r\tself assert: unePile top equals: p2.',			#stamp : 'RomeroGaetan 9/26/2022 18:58',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:12.044874+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPop,			#protocol : #'as yet unclassified',			#sourceCode : 'testPop\r\tself should: [ vide pop ] raise: Error.\r\tself testPop: standard.\r\tself testPop: pleine.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:12.058457+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPop,			#protocol : #'as yet unclassified',			#sourceCode : 'testPop\r\tself should: [ vide pop ] raise: Error.\r\tself testPop: standard.\r\tself testPop: pleine.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPop,			#protocol : #tests,			#sourceCode : 'testPop\r\tself should: [ vide pop ] raise: Error.\r\tself testPop: standard.\r\tself testPop: pleine.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:29.881156+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEquals,			#protocol : #'as yet unclassified',			#sourceCode : 'testEquals\r\tself assert: standard = standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:29.890529+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEquals,			#protocol : #'as yet unclassified',			#sourceCode : 'testEquals\r\tself assert: standard = standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEquals,			#protocol : #tests,			#sourceCode : 'testEquals\r\tself assert: standard = standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:33.835154+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEquals,			#protocol : #tests,			#sourceCode : 'testEquals\r\tself assert: standard = standard.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEquals,			#protocol : #tests,			#sourceCode : 'testEquals\r\tself assert: standard = standard',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:55.210906+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testFull,			#protocol : #'as yet unclassified',			#sourceCode : 'testFull\r\tself assert: pleine isFull.\r\tself deny: standard isFull.\r\tself deny: vide isFull.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T18:59:55.218245+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testFull,			#protocol : #'as yet unclassified',			#sourceCode : 'testFull\r\tself assert: pleine isFull.\r\tself deny: standard isFull.\r\tself deny: vide isFull.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testFull,			#protocol : #tests,			#sourceCode : 'testFull\r\tself assert: pleine isFull.\r\tself deny: standard isFull.\r\tself deny: vide isFull.',			#stamp : 'RomeroGaetan 9/26/2022 18:59',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:00:12.723449+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPush:',			#protocol : #'as yet unclassified',			#sourceCode : 'testPush: unePile\r\t| sauve |\r\tsauve := unePile.\r\tunePile push: 33.\r\tself deny: unePile isEmpty.\r\tself assert: unePile top equals: 33.\r\tself assert: unePile pop equals: 33.\r\t"on laisse la pile dans l\'état ou elle était en entrant"\r\tself assert: unePile equals: sauve.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:00:12.728118+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPush:',			#protocol : #'as yet unclassified',			#sourceCode : 'testPush: unePile\r\t| sauve |\r\tsauve := unePile.\r\tunePile push: 33.\r\tself deny: unePile isEmpty.\r\tself assert: unePile top equals: 33.\r\tself assert: unePile pop equals: 33.\r\t"on laisse la pile dans l\'état ou elle était en entrant"\r\tself assert: unePile equals: sauve.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #'testPush:',			#protocol : #tests,			#sourceCode : 'testPush: unePile\r\t| sauve |\r\tsauve := unePile.\r\tunePile push: 33.\r\tself deny: unePile isEmpty.\r\tself assert: unePile top equals: 33.\r\tself assert: unePile pop equals: 33.\r\t"on laisse la pile dans l\'état ou elle était en entrant"\r\tself assert: unePile equals: sauve.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:00:33.913253+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEmpty,			#protocol : #'as yet unclassified',			#sourceCode : 'testEmpty\r\t"vide, standard et pleine référencent des piles  créées dans la méthode setUp"\r\tself assert: vide isEmpty.\r\tself deny: standard isEmpty.\r\tself deny: pleine isEmpty.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:00:33.920936+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEmpty,			#protocol : #'as yet unclassified',			#sourceCode : 'testEmpty\r\t"vide, standard et pleine référencent des piles  créées dans la méthode setUp"\r\tself assert: vide isEmpty.\r\tself deny: standard isEmpty.\r\tself deny: pleine isEmpty.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEmpty,			#protocol : #tests,			#sourceCode : 'testEmpty\r\t"vide, standard et pleine référencent des piles  créées dans la méthode setUp"\r\tself assert: vide isEmpty.\r\tself deny: standard isEmpty.\r\tself deny: pleine isEmpty.',			#stamp : 'RomeroGaetan 9/26/2022 19:00',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:02:00.661656+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \r\ttailleDefaut := 5.',			#stamp : 'RomeroGaetan 9/26/2022 19:02',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:02:00.665895+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize \r\ttailleDefaut := 5.',			#stamp : 'RomeroGaetan 9/26/2022 19:02',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r\ttailleDefaut := 5.',			#stamp : 'RomeroGaetan 9/26/2022 19:02',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:08:21.234015+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new \r\t^super initialize.',			#stamp : 'RomeroGaetan 9/26/2022 19:08',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:08:21.238436+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new \r\t^super initialize.',			#stamp : 'RomeroGaetan 9/26/2022 19:08',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new \r\t^super initialize.',			#stamp : 'RomeroGaetan 9/26/2022 19:08',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:10:52.964364+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: taille\r\ttaille\r\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:10',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:10:52.968245+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'as yet unclassified',			#sourceCode : 'new: taille\r\ttaille\r\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:10',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: taille\r\ttaille\r\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:10',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:11:38.438324+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: taille\r\ttaille\r\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:10',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: taille\r\ttaille\r\t\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\t\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:11',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:13:16.849877+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpSessionSnapshot {		#imageName : '/Users/romero/Documents/Pharo/images/Pharo 9.0 - 64bit (old stable)2/Pharo 9.0 - 64bit (old stable)2.image'	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:13:59.836024+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: taille\r\ttaille\r\t\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\t\tifNotNil: [ ^super initialize: tailleDefaut  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:11',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #'new:',			#protocol : #'instance creation',			#sourceCode : 'new: taille\r\ttaille\r\t\tifNil: [ self error: \'Pas vraiment intelligent de faire ça\' ]\r\t\tifNotNil: [ ^super new initialize: taille.  ]',			#stamp : 'RomeroGaetan 9/26/2022 19:13',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:15:04.710681+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example\r\t| p |\r\tp := Pile new.\r\tp push: 12.\r\tp push: 3.\r\tp push: 4.\r\tp top.\r\tp pop.\r\tp push: 45.\r\tp push: 34.\r\tp isFull.\r\tp isEmpty.\r\t^p.\r\t',			#stamp : 'RomeroGaetan 9/26/2022 19:15',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:15:04.727306+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example\r\t| p |\r\tp := Pile new.\r\tp push: 12.\r\tp push: 3.\r\tp push: 4.\r\tp top.\r\tp pop.\r\tp push: 45.\r\tp push: 34.\r\tp isFull.\r\tp isEmpty.\r\t^p.\r\t',			#stamp : 'RomeroGaetan 9/26/2022 19:15',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t| p |\r\tp := Pile new.\r\tp push: 12.\r\tp push: 3.\r\tp push: 4.\r\tp top.\r\tp pop.\r\tp push: 45.\r\tp push: 34.\r\tp isFull.\r\tp isEmpty.\r\t^p.\r\t',			#stamp : 'RomeroGaetan 9/26/2022 19:15',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:15:21.283295+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t| p |\r\tp := Pile new.\r\tp push: 12.\r\tp push: 3.\r\tp push: 4.\r\tp top.\r\tp pop.\r\tp push: 45.\r\tp push: 34.\r\tp isFull.\r\tp isEmpty.\r\t^p.\r\t',			#stamp : 'RomeroGaetan 9/26/2022 19:15',			#package : #HAI914I		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t| p |\r\tp := self new.\r\tp push: 12.\r\tp push: 3.\r\tp push: 4.\r\tp top.\r\tp pop.\r\tp push: 45.\r\tp push: 34.\r\tp isFull.\r\tp isEmpty.\r\t^p.\r\t',			#stamp : 'RomeroGaetan 9/26/2022 19:15',			#package : #HAI914I		}	}}OmEntry {	#tags : {		#author : 'RomeroGaetan',		#time : DateAndTime [ '2022-09-26T19:20:35.98442+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpSessionSnapshot {		#imageName : '/Users/romero/Documents/Pharo/images/Pharo 9.0 - 64bit (old stable)2/Pharo 9.0 - 64bit (old stable)2.image'	}}